{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  items: [],\n  status: null,\n  //start with null in the redux dev kit\n  error: null\n};\n\n//this is payload creator\nexport const productsFetch = createAsyncThunk(\"products/productFetch\",\n//action type\nasync () => {\n  const response = await axios.get(\"http://localhost:5000/products\"); //fetches data from backend\n  return response === null || response === void 0 ? void 0 : response.data; //this stops from throwing a error\n});\n\nconst productsSlice = createSlice({\n  //contain reducers and actions \n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    //handles action types\n    [productsFetch.pending]: (state, action) => {\n      state.status = \"pending\"; //status changes to pending\n    },\n\n    [productsFetch.fulfilled]: (state, action) => {\n      state.items = action.payload; //access data from payload(productsFetch)\n      state.status = \"success\"; //when recieved data sucessful\n    },\n\n    [productsFetch.rejected]: (state, action) => {\n      state.status = \"rejected\"; //shows rejected when doesnt get response\n    }\n  }\n});\n\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","items","status","error","productsFetch","response","get","data","productsSlice","name","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["/Users/hafizalimi/Projects/React/Online-Shop/client/src/features/productsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\nconst initialState = {\n  items: [],\n  status: null,//start with null in the redux dev kit\n  error: null\n}\n\n//this is payload creator\nexport const productsFetch = createAsyncThunk(\n  \"products/productFetch\",//action type\n  async () => {\n      const response = await axios.get(\"http://localhost:5000/products\")//fetches data from backend\n      return response?.data//this stops from throwing a error\n    }\n)\n\nconst productsSlice = createSlice({//contain reducers and actions \n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: {//handles action types\n    [productsFetch.pending]: (state, action) => {\n      state.status = \"pending\";//status changes to pending\n    },\n    [productsFetch.fulfilled]: (state, action) => {\n      state.items = action.payload;//access data from payload(productsFetch)\n      state.status = \"success\";//when recieved data sucessful\n      \n    },\n    [productsFetch.rejected]: (state, action) => {\n      state.status = \"rejected\";//shows rejected when doesnt get response\n    },\n  },\n});\n\nexport default productsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,IAAI;EAAC;EACbC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAGN,gBAAgB,CAC3C,uBAAuB;AAAC;AACxB,YAAY;EACR,MAAMO,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,gCAAgC,CAAC;EAClE,OAAOD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI;AACvB,CAAC,CACJ;;AAED,MAAMC,aAAa,GAAGX,WAAW,CAAC;EAAC;EACjCY,IAAI,EAAE,UAAU;EAChBT,YAAY;EACZU,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IAAC;IACd,CAACP,aAAa,CAACQ,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1CD,KAAK,CAACX,MAAM,GAAG,SAAS,CAAC;IAC3B,CAAC;;IACD,CAACE,aAAa,CAACW,SAAS,GAAG,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC5CD,KAAK,CAACZ,KAAK,GAAGa,MAAM,CAACE,OAAO,CAAC;MAC7BH,KAAK,CAACX,MAAM,GAAG,SAAS,CAAC;IAE3B,CAAC;;IACD,CAACE,aAAa,CAACa,QAAQ,GAAG,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC3CD,KAAK,CAACX,MAAM,GAAG,UAAU,CAAC;IAC5B;EACF;AACF,CAAC,CAAC;;AAEF,eAAeM,aAAa,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}